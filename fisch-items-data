-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-01 01:49:00
-- Luau version 6, Types version 3
-- Time taken: 0.003716 seconds

local module_upvr = {
	Items = {
		["Crab Cage"] = {
			Rarity = "Unusual";
			Price = 45;
		};
		Firework = {
			Rarity = "Limited";
			Price = 130;
		};
		["Conception Conch"] = {
			Rarity = "Mythical";
			Price = 444;
		};
		Glider = {
			Rarity = "Rare";
			Price = 900;
			OnlyBuyOne = true;
		};
		["Advanced Glider"] = {
			Rarity = "Rare";
			Price = 2500;
			OnlyBuyOne = true;
		};
		["Fish Radar"] = {
			Rarity = "Legendary";
			Icon = "rbxassetid://132119413174655";
			Price = 8000;
			OnlyBuyOne = true;
		};
		GPS = {
			Rarity = "Uncommon";
			Icon = "rbxassetid://92660360174055";
			Price = 100;
			OnlyBuyOne = true;
		};
		["Tempest Totem"] = {
			Rarity = "Rare";
			Price = 2000;
		};
		["Windset Totem"] = {
			Rarity = "Rare";
			Price = 2000;
		};
		["Sundial Totem"] = {
			Rarity = "Rare";
			Price = 2000;
		};
		["Smokescreen Totem"] = {
			Rarity = "Rare";
			Price = 2000;
		};
		["Aurora Totem"] = {
			Rarity = "Mythical";
			Price = 500000;
		};
		["Meteor Totem"] = {
			Rarity = "Legendary";
			Price = 75000;
		};
		["Eclipse Totem"] = {
			Rarity = "Mythical";
			Price = 250000;
		};
		["Blizzard Totem"] = {
			Rarity = "Mythical";
			Price = 275000;
		};
		["Avalanche Totem"] = {
			Rarity = "Mythical";
			Price = 150000;
		};
		["Witches Ingredient"] = {
			Rarity = "Rare";
			Price = 10000;
		};
		["Water Bubble"] = {
			Rarity = "Legendary";
			Price = 25000;
			OnlyBuyOne = true;
		};
		["Basic Diving Gear"] = {
			Rarity = "Uncommon";
			Price = 3000;
			OnlyBuyOne = true;
		};
		["Advanced Diving Gear"] = {
			Rarity = "Unusual";
			Price = 15000;
			OnlyBuyOne = true;
		};
		["Basic Oxygen Tank"] = {
			Rarity = "Uncommon";
			Price = 1000;
			OnlyBuyOne = true;
		};
		["Beginner Oxygen Tank"] = {
			Rarity = "Unusual";
			Price = 3500;
			OnlyBuyOne = true;
		};
		["Intermediate Oxygen Tank"] = {
			Rarity = "Rare";
			Price = 10000;
			OnlyBuyOne = true;
		};
		["Advanced Oxygen Tank"] = {
			Rarity = "Legendary";
			Price = 25000;
			OnlyBuyOne = true;
		};
		["Winter Cloak"] = {
			Rarity = "Unusual";
			Price = 7500;
			OnlyBuyOne = true;
		};
		["Glimmerfin Suit Lvl 1"] = {
			Icon = "rbxassetid://107405457740294";
			Rarity = "Exotic";
			Price = 7500;
			OnlyBuyOne = true;
		};
		["Glimmerfin Suit Lvl 2"] = {
			Icon = "rbxassetid://120382468340755";
			Rarity = "Exotic";
			Price = 7500;
			OnlyBuyOne = true;
		};
		["Glimmerfin Suit Lvl 3"] = {
			Icon = "rbxassetid://137334347694202";
			Rarity = "Exotic";
			Price = 7500;
			OnlyBuyOne = true;
		};
		Flippers = {
			Rarity = "Unusual";
			Price = 9000;
			OnlyBuyOne = true;
		};
		["Super Flippers"] = {
			Rarity = "Legendary";
			Price = 30000;
			OnlyBuyOne = true;
		};
		Tidebreaker = {
			Rarity = "Mythical";
			Price = 80000;
			OnlyBuyOne = true;
		};
		["Ancient Thread"] = {
			Rarity = "Exotic";
			SellValue = 700;
			Price = math.huge;
		};
		["Magic Thread"] = {
			Rarity = "Exotic";
			SellValue = 250;
			Price = math.huge;
		};
		["Lunar Thread"] = {
			Rarity = "Exotic";
			SellValue = 1250;
			Price = math.huge;
		};
		Pickaxe = {
			Rarity = "Rare";
			Price = 5000;
			OnlyBuyOne = true;
		};
		Nuke = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		Fillionaire = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Treasure Map"] = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Handwritten Note"] = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Crossbow Bow"] = {
			NonPersistent = true;
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Crossbow Arrow"] = {
			NonPersistent = true;
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Crossbow Base"] = {
			NonPersistent = true;
			Rarity = "Exotic";
			Price = math.huge;
		};
		TNT = {
			Rarity = "Rare";
			Price = math.huge;
			purchasable = false;
		};
		["Heart Of Zeus"] = {
			Rarity = "Mythical";
			Price = math.huge;
			purchasable = false;
		};
		["Zeus Storm Totem"] = {
			Rarity = "Mythical";
			Price = 1500000;
		};
		["Poseidon Wrath Totem"] = {
			Rarity = "Mythical";
			Price = 1500000;
		};
		["Regular Token"] = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Elite Token"] = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Bag of Presents"] = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Skin Crate"] = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		Drill = {
			Rarity = "Exotic";
			Price = math.huge;
			OnlyBuyOne = true;
		};
		["Side Fins"] = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Metal Panels"] = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Back Fins"] = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		Windows = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Submarine Top"] = {
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Ice Crystal"] = {
			Icon = "rbxassetid://87113404726717";
			Rarity = "Exotic";
			Price = math.huge;
		};
		["Lava Crystal"] = {
			Icon = "rbxassetid://94081558964669";
			Rarity = "Exotic";
			Price = math.huge;
		};
	};
	Rarities = {"Trash", "Common", "Uncommon", "Unusual", "Rare", "Legendary", "Mythical", "Exotic", "Secret", "Limited", "Developer"};
	RarityColours = {
		Trash = Color3.fromRGB(145, 145, 145);
		Common = Color3.fromRGB(142, 187, 191);
		Uncommon = Color3.fromRGB(161, 255, 169);
		Unusual = Color3.fromRGB(192, 135, 198);
		Rare = Color3.fromRGB(119, 108, 181);
		Legendary = Color3.fromRGB(240, 181, 109);
		Mythical = Color3.fromRGB(255, 62, 120);
		Exotic = Color3.fromRGB(255, 255, 255);
		Secret = Color3.fromRGB(255, 255, 255);
		Limited = Color3.fromRGB(255, 130, 57);
		Extinct = Color3.fromRGB(54, 73, 159);
		Relic = Color3.fromRGB(120, 255, 183);
	};
}
function module_upvr.ToInteger(arg1, arg2) -- Line 388
	return math.floor(arg2.r * 255) * 65536 + math.floor(arg2.g * 255) * 256 + math.floor(arg2.b * 255)
end
function module_upvr.ToHex(arg1, arg2) -- Line 392
	--[[ Upvalues[1]:
		[1]: module_upvr (readonly)
	]]
	local any_ToInteger_result1 = module_upvr:ToInteger(arg2)
	local var65
	repeat
		local var66 = any_ToInteger_result1 % 16
		local tostring_result1 = tostring(var66)
		if 10 <= var66 then
			tostring_result1 = ({'A', 'B', 'C', 'D', 'E', 'F'})[1 + var66 - 10]
		end
		var65 = var65..tostring_result1
	until math.floor(any_ToInteger_result1 / 16) <= 0
	return '#'..string.reverse(var65)
end
return module_upvr
